import { Game } from '../game';
import { Entity } from '../../entity/entity';
import { Point } from '../../types';
import { Engine } from '../../engine/engine';
import { EnemyMovementSystem } from './systems/enemy-movement.system';
import { EnemyEntity } from '../../entity/enemy';
import { TestGameRenderer } from './renderers/test-game-renderer';
import { BaseRenderer } from '../../render/base-renderer';
import { SymbolComponent } from '../../entity/components/symbol-component';
import { PlayerComponent } from '../../entity/components/player-component';
import { ActionHandler, BaseAction, ActionClass } from '../../action/action-handler';
import { ImpassableComponent } from '../../entity/components/impassable-component';
import { Display } from '../../display/display';
import { World } from '../../world/world';
import { BumpingComponent } from '../../entity/components/bumping-component';
import { logger } from '../../util/logger';
import { OpacityComponent } from '../../entity/components/opacity-component';
import { Easing } from '../../display/types';
import { EntityMoveAction } from './actions/entity-movement.action';
import { MoveCooldownComponent } from './components/move-cooldown.component';
import { PlayerMovementSystem } from './systems/player-movement-system';
import { Direction } from '../../types';
import { BufferedMoveComponent } from './components/buffered-move.component';
import { VisionComponent } from '../../entity/components/vision-component';
import { PrefabWorldGenerator } from '../../world/generators/prefab-world-generator';
import { CooldownSystem } from './systems/cooldown.system';
import { CooldownComponent } from './components/cooldown.component';
import { WorldSystem } from './systems/world.system';
import { FollowingSystem } from './systems/following.system';
import { CooldownCleanupSystem } from './systems/cooldown-cleanup.system';
import { COOLDOWNS } from './constants';
import { Renderer } from '../../render/renderer';
import { UISpeedRenderer } from '../../render/ui-speed-renderer';
import { BrakeComponent } from './components/brake.component';
import { TurboComponent } from './components/turbo.component';
import { InertiaComponent } from './components/inertia.component';
import { EnemyAISystem } from './systems/enemy-ai.system';
import { StunAction } from './actions/stun.action';
import { CreateEntityAction } from './actions/create-projectile.action';

const DEFAULT_INPUT_CONFIG = `
mode: game
==========
map: default
---
w move up
s move down
a move left
d move right
e shift up
q shift down
Space brake
Shift turbo
`;

// E   [{"type": "symbol", "char": "E", "foreground": "#FFFFFFFF", "background": "#FF000044", "zIndex": 5, "alwaysRenderIfExplored": false}, {"type": "impassable"}, {"type": "facing", "direction": 0}, {"type": "followable"}, {"type": "cooldown", "cooldowns": {"move": {"base": 1000, "current": 1000, "ready": false}}}, {"type": "lightEmitter", "radius": 5, "color": "#CCCCCCFF44", "intensity": 0.3, "distanceFalloff": "quadratic", "facing": 2, "width": 1.571, "mode":"fg"}]


const SYMBOL_DEFINITIONS = `
#   [{"type": "symbol", "char": "#", "foreground": "#888888ff", "background": "#666666ff", "zIndex": 1, "alwaysRenderIfExplored": true}, {"type": "opacity", "isOpaque": true}, {"type": "impassable"}]
.   [{"type": "symbol", "char": ".", "foreground": "#333333ff", "background": "#000000ff", "zIndex": 1, "alwaysRenderIfExplored": true}]
@   [{"type": "symbol", "char": "@", "foreground": "#FFD700FF", "background": "#00000000", "zIndex": 2000}, {"type": "player"}, {"type": "impassable"}, {"type": "vision", "radius": 30}, {"type": "lightEmitter", "radius": 8, "color": "#FFFFFFFF", "intensity": 1.0, "distanceFalloff": "linear", "facing": 0, "width": 0.8, "mode":"fg"}]
o   [{"type": "symbol", "char": "o", "foreground": "#222222ff", "background": "#101010ff", "zIndex": 2, "alwaysRenderIfExplored": false}, {"type": "cooldown", "cooldowns": {"toggle": {"base": 30, "current": 30, "ready": false}}}]
x   [{"type": "symbol", "char": ".", "foreground": "#333333ff", "background": "#000000ff", "zIndex": 1, "alwaysRenderIfExplored": true}]
E   [{"type": "symbol", "char": "E", "foreground": "#FFFFFFFF", "background": "#FF000044", "zIndex": 5, "alwaysRenderIfExplored": false}, {"type": "impassable"}, {"type": "facing", "direction": 0}, {"type": "followable"}, {"type": "cooldown", "cooldowns": {"move": {"base": 5, "current": 5, "ready": false}}}]
f   [{"type": "symbol", "char": " ", "foreground": "#FFFFFFFF", "background": "#aa1111ff", "zIndex": 5, "alwaysRenderIfExplored": false}, {"type": "impassable"}, {"type": "opacity", "isOpaque": true}, {"type": "facing", "direction": 0}, {"type": "follower"}, {"type":"followable"}]
^   [{"type": "symbol", "char": "^", "foreground": "#444444ff", "background": "#000000ff", "zIndex": 2}, {"type": "turn", "direction": 0}]
>   [{"type": "symbol", "char": ">", "foreground": "#444444ff", "background": "#000000ff", "zIndex": 2}, {"type": "turn", "direction": 1}]
V   [{"type": "symbol", "char": "v", "foreground": "#444444ff", "background": "#000000ff", "zIndex": 2}, {"type": "turn", "direction": 2}]
<   [{"type": "symbol", "char": "<", "foreground": "#444444ff", "background": "#000000ff", "zIndex": 2}, {"type": "turn", "direction": 3}]
T   [{"type": "symbol", "char": "T", "foreground": "#999999ff", "background": "#99000044", "zIndex": 2}, {"type": "enemyAI", "aiType": "emp_turret"}, {"type": "vision", "radius": 10}]
F   [{"type": "symbol", "char": "F", "foreground": "#999999ff", "background": "#99000044", "zIndex": 2}, {"type": "enemyAI", "aiType": "follower"}, {"type": "vision", "radius": 30}, {"type":"cooldown", "cooldowns": {"move": {"base": 3, "current": 3, "ready": false}}}]
`.trim();

const LEVEL_DATA = `#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,o,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,V,#
#,.,.,>,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,o,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,V,.,#
#,.,.,.,>,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,o,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,V,.,.,#
#,.,.,.,.,>,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,o,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,V,.,.,.,#
#,.,.,.,.,.,>,.,.,.,.,.,.,.,.,.,#,#,#,#,#,#,#,#,#,#,#,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,#,#,#,#,#,#,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,#,.,.,.,.,#
#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,#,#,#,#,#,#,.,.,#,.,.,.,.,.,#,.,.,.,.,.,.,#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,#,.,.,.,.,#
#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,o,.,.,#,.,.,.,.,.,#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#,.,.,.,.,#,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,#,.,.,.,#,#,#,#,#,o,o,#,#,#,#,.,.,.,.,.,.,.,#,.,.,.,.,.,.,o,.,.,#,.,.,.,.,.,#,.,.,.,.,#,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#,.,.,#,#,#,#,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,o,.,.,.,.,.,.,#,.,.,#,.,.,.,.,.,#,.,.,.,.,#,.,.,.,.,.,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,.,.,.,.,#,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,#,.,.,#,.,.,.,.,.,.,#,#,#,#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,E.,.,E.,#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,o,.,.,.,.,.,.,#,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,o,o,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,#,#,#,#,#,#,#,#,#,#,#,#,.,.,.,.,.,#,#,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,o,o,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,o,o,#,#,#,.,.,.,.,.,.,.,#,.,>,.,.,.,.,.,.,<,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,E.,.,E.,#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,o,.,.,.,.,.,.,#,#,.,.,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,o,o,o,.,.,#,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,#,.,.,.,#,o,#,#,#,#,#,#,#,#,#,.,.,.,.,.,.,.,#,.,.,.,.,.,.,#,#,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,#,.,.,.,#,#,#,o,o,o,.,.,.,#,#,#,#,#,.,.,#,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,E.,.,E.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,#,#,#,#,#,#,#,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,.,.,.,.,.,#,.,.,.,.,.,.,.,#,.,.,.,.,#,.,.,#,.,.,.,.,.,.,.,.,.,.,#,#,#,E.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,#,.,.,.,.,.,#,.,.,.,.,#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,#,.,>,.,.,.,.,.,.,<,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#
#,.,.,.,E.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#,#,#,#,#,#,#,#,#,#,.,.,.,.,#,.,.,.,.,#,.,.,.,.,.,.,#,.,.,.,#,.,.,.,#,.,.,.,.,.,#,#,#,#,.,.,.,.,#,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#
#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,#,.,.,.,.,.,.,#,.,.,.,.,.,.,.,#,#,.,.,#,.,.,.,.,#,.,.,.,.,.,.,.,#,.,.,.,#,.,.,.,#,.,.,.,.,#,.,.,.,.,#,.,o,.,#,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#
#,.,.,.,E.,.,#,.,.,.,#,#,#,#,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,#,#,.,.,.,.,.,.,#,.,.,.,#,.,.,.,.,.,.,.,#,.,.,#,.,.,.,.,.,#,.,.,.,.,.,.,#,.,.,.,#,#,#,#,.,.,.,.,#,.,.,.,.,.,#,.,.,.,#,E.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#
#,.,.,.,.,.,#,.,.,.,o,.,.,.,.,#,#,#,#,.,.,.,.,.,.,.,.,.,.,#,#,.,.,.,.,.,.,.,.,#,#,.,.,.,#,.,.,.,.,.,#,#,.,.,.,#,.,.,.,.,.,.,#,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,#,.,o,#,.,>,.,.,.,.,.,.,<,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#
#,.,.,.,E.,.,#,@.,.,.,o,.,.,.,.,.,.,.,.,#,#,#,#,.,.,.,.,#,#,#,.,.,.,.,.,#,#,#,#,#,.,.,.,.,.,#,.,.,.,.,#,.,.,.,.,.,#,.,.,.,.,.,.,#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,#,.,.,.,#,.,.,.,.,.,.,.,#,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#
#,.,.,.,f.,.,#,.,.,.,o,.,.,.,.,.,.,.,.,.,.,#,#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#,.,.,.,.,#,.,#,#,.,.,.,.,#,.,.,.,.,.,.,#,#,#,#,#,#,#,#,.,.,.,.,.,.,.,.,#,.,o,.,#,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#
#,.,.,.,f.,.,#,.,.,.,o,.,.,.,.,.,.,.,.,.,.,.,#,#,#,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,#,.,.,#,.,.,.,.,#,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#
#,.,.,.,f.,.,#,.,.,.,#,#,#,#,#,.,.,.,.,.,.,.,.,#,#,.,.,.,.,.,#,#,#,#,#,#,#,#,#,#,#,#,#,#,.,.,.,.,.,.,#,.,.,.,.,.,.,.,#,.,o,.,o,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,#,#,#,#,.,.,o                ,.,#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#
#,.,.,.,f.,.,#,.,.,.,.,.,.,.,.,#,#,#,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#,.,.,.,#,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,.,.,.,.,.,.,.,.,.,.,#,E.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#
#,.,.,.,f.,.,#,.,.,.,.,.,.,.,.,.,.,.,#,#,#,#,.,.,.,.,#,#,#,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,#,.,.,.,#,#,o,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#
#,.,.,E.,.,E.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,#,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,.,.,.,.,.,.,#,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,#,#,#,#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,#,.,o,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,T.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,#,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,E.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,#,.,.,.,.,.,#,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,#,.,.,o,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,#,.,#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,#,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,#,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,#,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,#,#,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,#,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,E.,.,E.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,#,#,#,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,.,.,.,F.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,#,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,E.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,E.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,#,#,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,E.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,E.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,E.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,E.,.,E.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,E.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,E,.,E,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,E.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,E.,.,E,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,f.,.,f.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#
#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#
#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#
#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#
#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#
#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#
#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#
#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#
#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#
#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#
#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#
#,.,.,.,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,.,.,.,#
#,.,.,.,#,#,#,.,.,.,.,.,.,.,.,.,#,#,#,#,#,#,#,#,#,#,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,#,#,#,#,#,#,#,#,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,#,#,#,#,#,#,#,#,#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#,#,#,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,#
#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#,#`.trim();

export class BasicTestGame extends Game {
    private enemyMovementSystem: EnemyMovementSystem;
    private actionHandler: ActionHandler;
    private cooldownSystem: CooldownSystem;
    private playerMovementSystem: PlayerMovementSystem;
    private worldSystem: WorldSystem;
    private followingSystem: FollowingSystem;
    private cooldownCleanupSystem: CooldownCleanupSystem;
    uiSpeedRenderer: UISpeedRenderer;
    enemyAISystem: EnemyAISystem;
    
    constructor(canvasId: string) {
        super({
            elementId: canvasId,
            cellWidth: 20,
            cellHeight: 20,
            viewportWidth: 40,
            viewportHeight: 29,
            worldWidth: 120,
            worldHeight: 120
        });
    
        (this.renderer as TestGameRenderer).updateVisibility();

        // Attach render canvas to DOM for debugging
        // Attach render canvas to DOM for debugging
        const renderCanvas = this.display.getRenderCanvas();
        const existingRenderCanvas = document.getElementById('render-canvas');
        if (existingRenderCanvas) {
            existingRenderCanvas.replaceWith(renderCanvas);
        }
        
        // Set up action handler with new PlayerMoveAction
        this.actionHandler = new ActionHandler(this.world);
        this.actionHandler.registerAction('entityMove', EntityMoveAction);
        this.actionHandler.registerAction('stun', StunAction);
        this.actionHandler.registerAction('createProjectile', CreateEntityAction);
        
        // Set up input configuration
        this.input.loadConfig(DEFAULT_INPUT_CONFIG);
        this.input.setMode('game');
        
        // Initialize our systems
        this.cooldownSystem = new CooldownSystem(this.world);
        this.enemyAISystem = new EnemyAISystem(this.world, this.actionHandler);
        this.enemyMovementSystem = new EnemyMovementSystem(this.world, this.actionHandler);
        this.playerMovementSystem = new PlayerMovementSystem(this.world, this.actionHandler);
        this.worldSystem = new WorldSystem(this.world, this.actionHandler);
        this.followingSystem = new FollowingSystem(this.world, this.actionHandler);
        this.cooldownCleanupSystem = new CooldownCleanupSystem(this.world);

        // Add systems to engine update loop - cooldown system must run first
        this.engine.addSystem(() => {
            this.cooldownSystem.tick();
        });

        this.engine.addSystem(() => {
            this.enemyAISystem.tick();
        });

        this.engine.addSystem(() => {
            this.enemyMovementSystem.tick();
        });

        this.engine.addSystem(() => {
            this.playerMovementSystem.tick();
        });

        this.engine.addSystem(() => {
            this.worldSystem.tick();
        });

        this.engine.addSystem(() => {
            this.followingSystem.tick();
        });

        this.engine.addSystem(() => {
            this.cooldownCleanupSystem.tick();
        });

        // Add cooldown component to player
        const cooldowns = new CooldownComponent();
        cooldowns.setCooldown('move', COOLDOWNS.PLAYER_MOVE, COOLDOWNS.PLAYER_MOVE); // 1000ms move cooldown
        this.player.setComponent(cooldowns);

        this.world.on('entityMoved', (data: { entity: Entity, from: Point, to: Point }) => {
            if (data.entity.hasComponent('player')) {
                this.updateViewport();
            }
        });

        // Add cell inspection
        this.display.onCellClick((pos) => {
            // First show tile information
            const tiles = this.display.getTilesAt(pos.x, pos.y);
            if (tiles.length > 0) {
                logger.info(`Tiles at (${pos.x}, ${pos.y}):`);
                tiles.forEach(tile => {
                    logger.info(`- Symbol: "${tile.char}" | Color: ${tile.color} | Z-Index: ${tile.zIndex}`);
                });
            } else {
                logger.info(`No tiles at (${pos.x}, ${pos.y})`);
            }

            // Then show entity and component information
            const entities = this.world.getEntitiesAt(pos);
            if (entities.length > 0) {
                logger.info(`Entities at (${pos.x}, ${pos.y}):`);
                entities.forEach(entity => {
                    const components = entity.getComponents().map(c => c.type);
                    logger.info(`- Entity ${entity.getId()}: Components = [${components.join(', ')}]`);
                });
            }

            // Log the visibility mask
            const renderer = this.renderer as TestGameRenderer;
            const visibilityMask = renderer.getVisibilityMask?.();
            if (visibilityMask) {
                logger.info('Visibility:', visibilityMask[pos.y][pos.x]);
            }

            // Log FOV information
            const fovMap = this.world.getFOVMap();
            logger.info('FOV Status:', {
                visible: this.world.isLocationVisible(pos),
                discovered: this.world.isLocationDiscovered(pos),
                maskValue: this.display.getVisibilityMask()[pos.y][pos.x],
                hasBody: fovMap.getBody(pos.x, pos.y),
                hasWalls: fovMap.getWalls(pos.x, pos.y),
                tiles: this.display.getTilesAt(pos.x, pos.y)
            });
        });

        this.uiSpeedRenderer = new UISpeedRenderer(this.player);
        this.world.on('componentModified', (data: { entity: Entity, componentType: string }) => {
                this.uiSpeedRenderer.handleComponentModified(data.entity, data.componentType);
        });
    }

    protected createRenderer(): BaseRenderer {
        const renderer = new TestGameRenderer(this.display, this.world);
        return renderer;
    }

    protected initializeWorld(): void {
        // Use PrefabWorldGenerator to create the initial world
        const generator = new PrefabWorldGenerator(SYMBOL_DEFINITIONS, LEVEL_DATA);
        const world = generator.generate();
        this.world = world;

        // Find the player entity that was created by the generator
        this.player = world.getEntitiesWithComponent('player')[0];

        if (!this.player) {
            throw new Error('No player entity found in generated world');
        }

        // Initialize engine with the generated world
        this.engine = new Engine({
            mode: 'realtime',
            worldWidth: world.getSize().x,
            worldHeight: world.getSize().y,
            player: this.player,
            world: world
        });

        // Add distance indicator tiles
        // this.createDistanceIndicators(this.player.getPosition());

        const visionComponent = this.player.getComponent('vision') as VisionComponent;
        const radius = visionComponent?.radius ?? 30; // fallback to 30 if no component
        this.world.updateVision(this.player.getPosition(), radius);

        // Update initial visibility
        this.updateViewport(false);
    }

    private pointToKey(point: Point): string {
        return `${point.x},${point.y}`;
    }

    private createBorderWalls(): void {
        const width = this.display.getWorldWidth();
        const height = this.display.getWorldHeight();

        // Create walls along all edges
        for (let x = 0; x < width; x++) {
            this.createWall({ x, y: 0 });           // Top wall
            this.createWall({ x, y: height - 1 });  // Bottom wall
        }
        for (let y = 1; y < height - 1; y++) {
            this.createWall({ x: 0, y });           // Left wall
            this.createWall({ x: width - 1, y });   // Right wall
        }
    }

    private createWall(pos: Point): void {
        const wall = new Entity(pos);
        wall.setComponent(new ImpassableComponent());
        wall.setComponent(new OpacityComponent());
        wall.setComponent(new SymbolComponent(
            '#',
            '#888888ff', // Darker gray for border walls
            '#666666ff',
            1,
            true
        ));
        this.world.addEntity(wall);
    }

    private createDistanceIndicators(center: Point): void {
        const width = this.display.getWorldWidth();
        const height = this.display.getWorldHeight();
        const spacing = 5; // Space between numbers

        for (let y = 1; y < height - 1; y++) {
            for (let x = 1; x < width - 1; x++) {
                const dx = Math.abs(x - center.x);
                const dy = Math.abs(y - center.y);
                const distance = Math.max(dx, dy);
                
                const entity = new Entity({ x, y });
                
                if (distance % spacing === 0) {
                    // Add number indicator
                    entity.setComponent(new SymbolComponent(
                        Math.floor(distance / spacing).toString(),
                        '#444444FF', // Dark gray numbers
                        '#000000FF', // Very subtle background
                        1,          
                        true       
                    ));
                } else {
                    // Add floor tile
                    entity.setComponent(new SymbolComponent(
                        '.',
                        '#333333FF', // Slightly darker gray for floor
                        '#000000FF', // Very subtle background
                        1,          
                        true       
                    ));
                }
                
                this.world.addEntity(entity);
            }
        }
    }

    private findRandomEmptyPosition(usedPositions: Set<string>): Point {
        const width = this.display.getWorldWidth();
        const height = this.display.getWorldHeight();
        let attempts = 100; // Prevent infinite loop

        while (attempts > 0) {
            const x = Math.floor(Math.random() * (width - 2)) + 1;
            const y = Math.floor(Math.random() * (height - 2)) + 1;
            const posKey = this.pointToKey({ x, y });

            if (!usedPositions.has(posKey)) {
                return { x, y };
            }
            attempts--;
        }
        
        return { x: 0, y: 0 }; // Could not find empty position
    }

    private updateViewport(animate: boolean = true): void {
        const pos = this.player.getPosition();
        const viewportWidth = this.display.getViewportWidth();
        const viewportHeight = this.display.getViewportHeight();
        
        // Center the viewport on the player
        const viewportX = Math.max(0, Math.min(
            pos.x - Math.floor(viewportWidth / 2),
            this.world.getWorldWidth() - viewportWidth
        ));
        const viewportY = Math.max(0, Math.min(
            pos.y - Math.floor(viewportHeight / 2),
            this.world.getWorldHeight() - viewportHeight
        ));

        this.display.setViewport(Math.floor(viewportX), Math.floor(viewportY), {
            smooth: animate,
            duration: 0.1,  // 100ms transition
            easing: Easing.quadOut
        });
        // this.display.setViewport(viewportX, viewportY);
    }

    // private tryMove(direction: string): void {
    //     const pos = this.player.getPosition();
    //     let newPos: Point = { ...pos };

    //     switch(direction) {
    //         case 'up':    newPos.y--; break;
    //         case 'down':  newPos.y++; break;
    //         case 'left':  newPos.x--; break;
    //         case 'right': newPos.x++; break;
    //     }

    //     this.actionHandler.execute({
    //         type: 'playerMove',
    //         entityId: this.player.getId(),
    //         data: { to: newPos }
    //     });


    // }

    protected handleInput(type: string, action: string, params: string[]): void {

        // reject "up" events, might help with some accidental post-tick activations
        if (action === 'move' && type !== 'up') {
            const directionStr = params[0];
            let direction: Direction;
            
            switch(directionStr) {
                case 'up':    direction = Direction.North; break;
                case 'down':  direction = Direction.South; break;
                case 'left':  direction = Direction.West;  break;
                case 'right': direction = Direction.East;  break;
                default: return;
            }

            this.player.removeComponent('bufferedMove');
            this.player.setComponent(new BufferedMoveComponent(direction));
        }

        // logger.info(`key: ${action} ${params[0]} ${type}`);
        // if we're shifting up, require key-up
        // if (action === 'shift' && type === 'up' && params[0] === 'up') {
            

        // } else if(action === 'shift' && (params[0] === 'down')) {


        // }

        if(action === 'turbo' && (type === 'down' || type === 'repeat')) {
            const inertia = this.player.getComponent('inertia') as InertiaComponent;
            const turbo = this.player.getComponent('turbo') as TurboComponent;
            if(inertia && inertia.magnitude >= 6 && !turbo) {
                this.player.setComponent(new TurboComponent());
            }
        } else if(action === 'turbo' && (type === 'up')) {
            this.player.removeComponent('turbo');
        }

        logger.info(`action: ${action} type: ${type}`);
        if(action === 'brake' && (type === 'down' || type === 'repeat')) {
            // how do we handle conflict between brake and a move? I think brake takes precedence. add it to buffered move as a boolean.           
            this.player.setComponent(new BrakeComponent());
        } else if(action === 'brake' && (type === "up")) {
            this.player.removeComponent('brake');
        }
    }
    
    public getDisplay(): Display {
        return this.display;
    }

    public saveGame(): void {
        const saveData = {
            world: this.world.serialize()
        };

        localStorage.setItem('gameState', JSON.stringify(saveData));
        console.log('Game saved');
    }

    public loadGame(): void {
        const savedState = localStorage.getItem('gameState');
        if (!savedState) {
            console.log('No saved game found');
            return;
        }

        try {
            const saveData = JSON.parse(savedState);
            const newWorld = World.deserialize(saveData.world);
            
            // Replace current world
            this.world = newWorld;
            
            // Re-establish player reference
            this.player = this.world.getEntitiesWithComponent('player')[0];
            
            // Update viewport to center on player
            this.updateViewport(false);
            
            console.log('Game loaded');
        } catch (error) {
            console.error('Error loading game:', error);
        }
    }
} 


// Example action implementations

// Example action types
interface MoveActionData {
    to: Point;
}

export const MoveAction: ActionClass<MoveActionData> = {
    canExecute(world: World, action: BaseAction<MoveActionData>): boolean {
        const entity = world.getEntity(action.entityId);
        if (!entity) return false;

        const from = entity.getPosition();
        const to = action.data.to;

        // Check if movement is possible using the new isPassable method
        if (!world.isPassable(from.x, from.y, to.x, to.y)) {
            // If movement is blocked, trigger bump animation
            entity.setComponent(new BumpingComponent({
                x: to.x - from.x,
                y: to.y - from.y
            }));
            return false;
        }

        return true;
    },

    execute(world: World, action: BaseAction<MoveActionData>): boolean {
        const result = world.moveEntity(action.entityId, action.data.to);
        const entity = world.getEntity(action.entityId);
        if (result && entity?.hasComponent('player')) {
            const visionComponent = entity.getComponent('vision') as VisionComponent;
            const radius = visionComponent?.radius ?? 30; // fallback to 30 if no component
            world.updateVision(action.data.to, radius);
        }
        return result;
    }
};
